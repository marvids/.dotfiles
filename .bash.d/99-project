#!/bin/bash

clear_project() {
    if [[ -n $ACTIVE_PROJECT ]]; then
        local PROJECT="$ACTIVE_PROJECT"
        __get_project "$PROJECT"

        [[ -n $VIRTUALENV_INSTANCE ]] && deactivate
        unset VIRTUALENV_INSTANCE

        [[ -n $PROJECT_PATH ]] && __remove_path "$PROJECT_PATH"
        unset PROJECT_PATH

        local WINDOW_TITLE=$(__get_window_title)
        __set_window_title "${WINDOW_TITLE% ($ACTIVE_PROJECT)}"
        unset ACTIVE_PROJECT
    fi
}

set_project() {
    if [[ -n $ACTIVE_PROJECT ]]; then
        clear_project
    fi

    local PROJECT="$1"
    __get_project "$PROJECT"

    [[ -n $VIRTUALENV_INSTANCE ]] && workon "$VIRTUALENV_INSTANCE"
    [[ -n $PROJECT_PATH ]] && __add_path "$PROJECT_PATH"

    export ACTIVE_PROJECT="$PROJECT"
    local WINDOW_TITLE=$(__get_window_title)
    __set_window_title "$WINDOW_TITLE ($ACTIVE_PROJECT)"
}

__get_window_title() {
    echo $(tmux list-windows -F "#{window_active}	#W" | grep "^1" | cut -f 2)
}

__set_window_title() {
    printf '\033k'"$1"'\033\\'
}

__add_path() {
    PATH=$PATH:"$1"
}

__remove_path() {
    PATH=${PATH%:"$1"}
}

__get_project() {
    local PROJECT_CFG="$PROJECTS_DIR/$1/conf"
    if [[ -f $PROJECT_CFG ]]; then
        source $PROJECT_CFG
    else
        echo "Unknown project: $1"
    fi
}

__complete_project() {
    if [[ $COMP_CWORD == 1 ]]; then
        local CUR=${COMP_WORDS[COMP_CWORD]}
        local WORDS=$(find ~/projects/ -maxdepth 1 | xargs -l basename)
        COMPREPLY=( $( compgen -W "$WORDS" -- $CUR ) )
    fi
}
complete -F __complete_project set_project
